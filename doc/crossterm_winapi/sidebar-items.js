initSidebarItems({"enum":[["EventFlags","The type of mouse event. If this value is zero, it indicates a mouse button being pressed or released. Otherwise, this member is one of the following values."],["HandleType","This enum represents the different handles that could be requested."],["InputRecord","Describes an input event in the console input buffer. These records can be read from the input buffer by using the `ReadConsoleInput` or `PeekConsoleInput` function, or written to the input buffer by using the `WriteConsoleInput` function."]],"fn":[["is_true","Parses the given integer to an bool by checking if the value is 0 or 1. This is currently used for checking if a WinApi called succeeded, this might be moved into a macro at some time. So please don’t use this :(."]],"struct":[["ButtonState","The status of the mouse buttons. The least significant bit corresponds to the leftmost mouse button. The next least significant bit corresponds to the rightmost mouse button. The next bit indicates the next-to-leftmost mouse button. The bits then correspond left to right to the mouse buttons. A bit is 1 if the button was pressed."],["Console","Could be used to do some basic things with the console."],["ConsoleMode","This abstracts away some WinaApi calls to set and get the console mode."],["ControlKeyState",""],["Coord","This is type represents the position of something on a certain ‘x’ and ‘y’."],["Handle","This abstracts away some WinaApi calls to set and get some console handles."],["KeyEventRecord","Describes a keyboard input event in a console INPUT_RECORD structure. link: [https://docs.microsoft.com/en-us/windows/console/key-event-record-str]"],["MouseEvent",""],["ScreenBuffer",""],["ScreenBufferInfo","This type is a wrapper for `CONSOLE_SCREEN_BUFFER_INFO` and has some methods to extract information from it."],["Semaphore",""],["Size","This is type represents the size of something in width and height."],["WindowPositions","This is a wrapper for the locations of a rectangle."]]});